{"version":3,"sources":["game2.js"],"names":["PipeManager","require","Bird","Scroll","cc","Class","extends","Component","properties","goldScore","silverScore","pipeManager","bird","scoreLabel","Label","maskLayer","default","type","Node","ground","readyMenu","gameOverMenu","scoreAudio","url","AudioClip","swooshingAudio","onLoad","score","string","init","_enableInput","_registerInput","_revealScene","active","color","Color","BLACK","runAction","fadeOut","restart","audioEngine","playEffect","sequence","fadeIn","callFunc","director","loadScene","_gameStart","_hideReadyMenu","startSpawn","startFly","gameOver","reset","getComponent","stopScroll","_blinkOnce","_showGameOverMenu","gainScore","node","WHITE","fadeTo","gameOverNode","getChildByName","resultBoardNode","buttonStartNode","currentScoreNode","bestScoreNode","medalNode","KEY_BEST_SCORE","bestScore","sys","localStorage","getItem","setItem","showMedal","err","spriteFrame","Sprite","loader","loadRes","showNode","action","callback","showNodeFunc","spawn","moveBy","p","moveTo","x","easing","easeCubicActionOut","scheduleOnce","_startGameOrJumpBird","state","State","Ready","rise","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","bind","TOUCH_ONE_BY_ONE","onTouchBegan","touch","enable","resumeTarget","pauseTarget"],"mappings":"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","file":"game2.js","sourceRoot":"..\\..\\..\\..\\assets\\Scripts","sourcesContent":["var PipeManager = require('PipeManager');\r\nvar Bird = require('Bird');\r\nvar Scroll = require('Scroll');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        /** Điểm vàng */\r\n        goldScore: 30,\r\n        /** Điểm số bạc */\r\n        silverScore: 10,\r\n        /** Thành phần quản lý đường ống */\r\n        pipeManager: PipeManager,\r\n        /** Thành phần chim */\r\n        bird: Bird,\r\n        /** Nút hiển thị điểm */\r\n        scoreLabel: cc.Label,\r\n        /** Nút mặt nạ */\r\n        maskLayer: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        /** Nút mặt đất */\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        /** Chuẩn bị để bắt đầu nút menu */\r\n        readyMenu: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        /** Nút menu kết thúc trò chơi */\r\n        gameOverMenu: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        /** Âm thanh điểm */\r\n        scoreAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n        /** Nút bấm, âm thanh khi nút xuất hiện */\r\n        swooshingAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        }\r\n    },\r\n\r\n    onLoad() {\r\n        this.score = 0;\r\n        this.scoreLabel.string = this.score;\r\n        this.bird.init(this);\r\n        this._enableInput(true);\r\n        this._registerInput();\r\n        this._revealScene();\r\n    },\r\n\r\n    _revealScene(){\r\n        this.maskLayer.active = true;\r\n        this.maskLayer.color = cc.Color.BLACK;\r\n        this.maskLayer.runAction(cc.fadeOut(0.3));\r\n    },\r\n\r\n    /** Nhấp vào nút Khởi động lại trò chơi trong menu kết thúc trò chơi sẽ gọi phương thức này */\r\n    restart(){\r\n        //cai nay k chay duoc\r\n        cc.audioEngine.playEffect(this.swooshingAudio);\r\n        this.maskLayer.color = cc.Color.BLACK;\r\n        this.maskLayer.runAction(\r\n            cc.sequence(\r\n                cc.fadeIn(0.3),\r\n                cc.callFunc(()=> {\r\n                    // Tải lại cảnh\r\n                    cc.director.loadScene('Playscreen');\r\n                }, this)\r\n            )\r\n        );\r\n    },\r\n\r\n    _gameStart(){\r\n        this._hideReadyMenu();\r\n        //cái này chạy\r\n        this.pipeManager.startSpawn();\r\n        //pipe pipeManager bi loi\r\n        this.bird.startFly();\r\n    },\r\n\r\n    gameOver () {\r\n        this.pipeManager.reset();\r\n        this.ground.getComponent(Scroll).stopScroll();\r\n        this._enableInput(false);\r\n        this._blinkOnce();\r\n        this._showGameOverMenu();\r\n    },\r\n\r\n    gainScore () {\r\n        this.score++;\r\n        this.scoreLabel.string = this.score;\r\n        cc.audioEngine.playEffect(this.scoreAudio);\r\n    },\r\n\r\n    _hideReadyMenu(){\r\n        this.scoreLabel.node.runAction(cc.fadeIn(0.3));\r\n        this.readyMenu.runAction(\r\n            cc.sequence(\r\n                cc.fadeOut(0.5),\r\n                cc.callFunc(()=> {\r\n                    this.readyMenu.active = false;\r\n                }, this)\r\n            )\r\n        );\r\n    },\r\n\r\n    /** Màn hình nhấp nháy */\r\n    _blinkOnce(){\r\n        this.maskLayer.color = cc.Color.WHITE;\r\n        this.maskLayer.runAction(\r\n            cc.sequence(\r\n                cc.fadeTo(0.1, 200),\r\n                cc.fadeOut(0.1)\r\n            )\r\n        );\r\n    },\r\n\r\n    _showGameOverMenu(){\r\n        // Ẩn điểm số\r\n\r\n        this.scoreLabel.node.runAction(\r\n            cc.sequence(\r\n                cc.fadeOut(0.3),\r\n                cc.callFunc(()=> {\r\n                    this.scoreLabel.active = false;\r\n                }, this)\r\n            )\r\n        );\r\n\r\n        // Nhận từng nút giao diện kết thúc trò chơi\r\n        let gameOverNode = this.gameOverMenu.getChildByName(\"gameOverLabel\");\r\n        let resultBoardNode = this.gameOverMenu.getChildByName(\"resultBoard\");\r\n        let buttonStartNode = this.gameOverMenu.getChildByName(\"buttonStart\");\r\n        let currentScoreNode = resultBoardNode.getChildByName(\"currentScore\");\r\n        let bestScoreNode = resultBoardNode.getChildByName(\"bestScore\");\r\n        let medalNode = resultBoardNode.getChildByName(\"medal\");\r\n\r\n        // Lưu điểm cao nhất \r\n        const KEY_BEST_SCORE = \"bestScore\";\r\n        let bestScore = cc.sys.localStorage.getItem(KEY_BEST_SCORE);\r\n        if (bestScore === \"null\" || this.score > bestScore) {\r\n            bestScore = this.score;\r\n        }\r\n        cc.sys.localStorage.setItem(KEY_BEST_SCORE, bestScore);\r\n\r\n        // Hiển thị điểm số hiện tại, điểm số cao nhất\r\n        currentScoreNode.getComponent(cc.Label).string = this.score;\r\n        bestScoreNode.getComponent(cc.Label).string = bestScore;\r\n\r\n        // Quyết định xem có hiển thị huy chương hay không\r\n        let showMedal = (err, spriteFrame) => {\r\n            medalNode.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n        };\r\n        \r\n        if (this.score >= this.goldScore) { // Hiển thị huy chương vàng\r\n            cc.loader.loadRes(\"Textures/medal_gold.png/medal_gold\", showMedal);\r\n        } else if (this.score >= this.silverScore) { // Hiển thị huy chương bạc\r\n\r\n            cc.loader.loadRes(\"Textures/medal_silver.png/medal_silver\", showMedal);\r\n        } else { // Không hiển thị huy chương\r\n            showMedal();\r\n        }\r\n\r\n        // Hiển thị từng nút lần lượt\r\n        var showNode = (node, action, callback)=> {\r\n            buttonStartNode.active = true;\r\n            cc.audioEngine.playEffect(this.swooshingAudio);\r\n            node.runAction(cc.sequence(\r\n                action,\r\n                cc.callFunc(()=> {\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                }, this)\r\n            ));\r\n        };\r\n        this.gameOverMenu.active = true;\r\n        let showNodeFunc = ()=> showNode(\r\n            gameOverNode,\r\n            cc.spawn(\r\n                cc.fadeIn(0.2),\r\n                cc.sequence(\r\n                    cc.moveBy(0.2, cc.p(0, 10)),\r\n                    cc.moveBy(0.5, cc.p(0, -10))\r\n                )\r\n            ),\r\n            ()=>showNode(\r\n                resultBoardNode,\r\n                cc.moveTo(0.5, cc.p(resultBoardNode.x, -50)).easing(cc.easeCubicActionOut()),\r\n                ()=>showNode(\r\n                    buttonStartNode,\r\n                    cc.fadeIn(0.5))\r\n            )\r\n        );\r\n        this.scheduleOnce(showNodeFunc, 0.55);\r\n    },\r\n\r\n    _startGameOrJumpBird(){\r\n        if (this.bird.state === Bird.State.Ready) {\r\n            this._gameStart();\r\n        } else {\r\n            this.bird.rise();\r\n        }\r\n    },\r\n\r\n    _registerInput () {\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            onKeyPressed: function (keyCode, event) {\r\n                this._startGameOrJumpBird();\r\n            }.bind(this)\r\n        }, this.node);\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.TOUCH_ONE_BY_ONE,\r\n            onTouchBegan: function (touch, event) {\r\n                this._startGameOrJumpBird();\r\n                return true;\r\n            }.bind(this)\r\n        }, this.node);\r\n    },\r\n\r\n    _enableInput: function (enable) {\r\n        if (enable) {\r\n            cc.eventManager.resumeTarget(this.node);\r\n        } else {\r\n            cc.eventManager.pauseTarget(this.node);\r\n        }\r\n    },\r\n});"]}