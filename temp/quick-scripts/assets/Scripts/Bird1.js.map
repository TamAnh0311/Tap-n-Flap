{"version":3,"sources":["Bird1.js"],"names":["State","cc","Enum","Ready","Rise","FreeFall","Drop","Dead","Class","statics","extends","Component","properties","initRiseSpeed","gravity","state","default","type","ground","Node","riseAudio","url","AudioClip","dropAudio","hitAudio","init","Playscreen","currentSpeed","anim","getComponent","Animation","playAdditive","startFly","_getNextPipe","stop","rise","nextPipe","pipeManager","getNext","update","dt","_updatePosition","_updateState","_detectCollision","_fixBirdFinalPosition","flying","node","y","_runFallAction","_detectCollisionWithBird","collideWithPipe","topPipe","bottomPipe","collideWithGround","audioEngine","playEffect","_runDropAction","scheduleOnce","gameOver","birdLeft","x","pipeRight","width","crossPipe","gainScore","otherNode","rectIntersectsRect","getBoundingBoxToWorld","_runRiseAction","stopAllActions","jumpAction","rotateTo","easing","easeCubicActionOut","runAction","duration","dropAction","easeCubicActionIn"],"mappings":"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","file":"Bird1.js","sourceRoot":"..\\..\\..\\..\\assets\\Scripts","sourcesContent":["const State = cc.Enum({\r\n    /** Chuẩn bị trước khi trò chơi bắt đầu */\r\n    Ready: -1,\r\n    /** Chim tăng */\r\n    Rise: -1,\r\n    /** Chim rơi tự do */\r\n    FreeFall: -1,\r\n    /** Chim đâm vào ống rơi */\r\n    Drop: -1,\r\n    /** Con chim đã rơi xuống đất */\r\n    Dead: -1,\r\n});\r\n\r\ncc.Class({\r\n    statics: {\r\n        State: State\r\n    },\r\n\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        /** Tốc độ ném, tính bằng pixel / giây */\r\n        initRiseSpeed: 800,\r\n        /** Tăng tốc trọng lực, đơn vị: pixel / giây bình phương*/\r\n        gravity: 1000,\r\n        /** Tình trạng của chim */\r\n        state: {\r\n            default: State.Ready,\r\n            type: State,\r\n        },\r\n        /** Nút mặt đất */\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        /** Âm thanh chim bay lên trên */\r\n        riseAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n        /** Tiếng chim bắt đầu rơi xuống sau khi va chạm với ống nước */\r\n        dropAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n        /** Tiếng va chạm của con chim */\r\n        hitAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n    },\r\n\r\n    init(Playscreen){\r\n        this.Playscreen = Playscreen;\r\n        this.state = State.Ready;\r\n        this.currentSpeed = 0;\r\n        this.anim = this.getComponent(cc.Animation);\r\n        this.anim.playAdditive(\"flapping\");\r\n    },\r\n\r\n    startFly () {\r\n        this._getNextPipe();\r\n        this.anim.stop(\"flapping\");\r\n        this.rise();\r\n    },\r\n\r\n    _getNextPipe () {\r\n        this.nextPipe = this.Playscreen.pipeManager.getNext();\r\n    },\r\n\r\n    update (dt) {\r\n        if (this.state === State.Ready || this.state === State.Dead) {\r\n            return;\r\n        }\r\n        this._updatePosition(dt);\r\n        this._updateState(dt);\r\n        this._detectCollision();\r\n        this._fixBirdFinalPosition();\r\n    },\r\n\r\n    _updatePosition (dt) {\r\n        var flying = this.state === State.Rise\r\n            || this.state === State.FreeFall\r\n            || this.state === State.Drop;\r\n        if (flying) {\r\n            this.currentSpeed -= dt * this.gravity;\r\n            this.node.y += dt * this.currentSpeed;\r\n        }\r\n    },\r\n\r\n    _updateState (dt) {\r\n        switch (this.state) {\r\n            case State.Rise:\r\n                if (this.currentSpeed < 0) {\r\n                    this.state = State.FreeFall;\r\n                    this._runFallAction();\r\n                }\r\n                break;\r\n            case State.Drop:\r\n                if (this._detectCollisionWithBird(this.ground)) {\r\n                    this.state = State.Dead;\r\n                }\r\n                break;\r\n        }\r\n    },\r\n\r\n    _detectCollision () {\r\n        if (!this.nextPipe) {\r\n            return;\r\n        }\r\n        if (this.state === State.Ready || this.state === State.Dead || this.state === State.Drop) {\r\n            return;\r\n        }\r\n        let collideWithPipe = false;\r\n        // Phát hiện va chạm giữa chim và ống trên\r\n        if (this._detectCollisionWithBird(this.nextPipe.topPipe)) {\r\n            collideWithPipe = true;\r\n        }\r\n        // Phát hiện va chạm của chim với ống bên dưới\r\n        if (this._detectCollisionWithBird(this.nextPipe.bottomPipe)) {\r\n            collideWithPipe = true;\r\n        }\r\n        // Phát hiện va chạm giữa chim và mặt đất\r\n        let collideWithGround = false;\r\n        if (this._detectCollisionWithBird(this.ground)) {\r\n            collideWithGround = true;\r\n        }\r\n        // Xử lý kết quả va chạm\r\n        if (collideWithPipe || collideWithGround) {\r\n            cc.audioEngine.playEffect(this.hitAudio);\r\n\r\n            if (collideWithGround) { // Va chạm với mặt đất\r\n                this.state = State.Dead;\r\n            } else { // Va chạm với một đường ống nước\r\n                this.state = State.Drop;\r\n                this._runDropAction();\r\n                this.scheduleOnce(()=> {\r\n                    cc.audioEngine.playEffect(this.dropAudio);\r\n                }, 0.3);\r\n            }\r\n\r\n            this.anim.stop();\r\n            this.Playscreen.gameOver();\r\n      \r\n        } else { // Xử lý không có xung đột\r\n            let birdLeft = this.node.x;\r\n            let pipeRight = this.nextPipe.node.x + this.nextPipe.topPipe.width\r\n            let crossPipe = birdLeft > pipeRight;\r\n            if (crossPipe) {\r\n                this.Playscreen.gainScore();\r\n                this._getNextPipe();\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /** Sửa vị trí đích cuối cùng */\r\n    _fixBirdFinalPosition(){\r\n        if (this._detectCollisionWithBird(this.ground)) {\r\n            this.node.y = this.ground.y + this.node.width / 2;\r\n        }\r\n    },\r\n\r\n    _detectCollisionWithBird(otherNode){\r\n        return cc.rectIntersectsRect(this.node.getBoundingBoxToWorld(), otherNode.getBoundingBoxToWorld());\r\n    },\r\n\r\n    rise() {\r\n        this.state = State.Rise;\r\n        this.currentSpeed = this.initRiseSpeed;\r\n        this._runRiseAction();\r\n        cc.audioEngine.playEffect(this.riseAudio);\r\n    },\r\n\r\n    _runRiseAction(){\r\n        this.node.stopAllActions();\r\n        let jumpAction = cc.rotateTo(0.3, -30).easing(cc.easeCubicActionOut());\r\n        this.node.runAction(jumpAction);\r\n    },\r\n\r\n    _runFallAction(duration = 0.6){\r\n        this.node.stopAllActions();\r\n        let dropAction = cc.rotateTo(duration, 90).easing(cc.easeCubicActionIn());\r\n        this.node.runAction(dropAction);\r\n    },\r\n\r\n    _runDropAction(){\r\n        if (this.currentSpeed > 0) {\r\n            this.currentSpeed = 0;\r\n        }\r\n        this._runFallAction(0.4);\r\n    }\r\n});\r\n"]}